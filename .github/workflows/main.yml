name: CI

on:
  push:
    branches:
      - 'master'
      - 'renovate/*'
      - 'release/*'
      - 'ci/*'
  pull_request:
    branches:
      - '*'
      - '!translations'
      - '!renovate/*'
      - '!release/*'
      - '!ci/*'
    types: [assigned, opened, synchronize, reopened]

jobs:
  test:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      matrix:
        node_version: [20.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: set git config
        run: |
          git config --global core.eol lf
          git config --global core.autocrlf false

      - name: ubuntu file watcher tweak
        if: matrix.os == 'ubuntu-latest'
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: install yarn
        run: npm install -g yarn

      - name: get yarn cache dir
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: yarn

      - name: lint code
        run: yarn lint

      - name: typescript compile
        run: yarn tsc

      - name: unit tests
        run: yarn test:ci

      - name: coverage
        uses: codecov/codecov-action@v4

      - name: electron build
        run: yarn package:ci
        if: startsWith(github.ref, 'refs/heads/release/')
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
