name: CI

on:
  push:
    branches:
      - master
      - renovate/*
  pull_request:
    branches-ignore:
      - translations
    types: [assigned, opened, synchronize, reopened]

jobs:
  test:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node_version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: set git config
        run: |
          git config --global core.eol lf
          git config --global core.autocrlf false

      - name: ubuntu file watcher tweak
        if: matrix.os == 'ubuntu-latest'
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - uses: actions/checkout@v1

      - name: setup nodejs
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: install yarn
        run: npm install -g yarn

      - name: get yarn cache dir
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: yarn

      - name: lint code
        run: yarn lint

      - name: typescript compile
        run: yarn tsc

      - name: unit tests
        run: yarn test:ci

      - name: coverage
        run: yarn test:codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: electron build
        run: yarn package:ci
        if: env.GH_TOKEN != ''
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
